# Set the shell
SHELL=/bin/bash

# Determine the default target architecture on this machine, if override not set
ifeq "$(BLD_ARCH)" ""
export BLD_ARCH:=$(shell $(BLD_TOP)/releng/set_bld_arch.sh)
endif

# get current working directory with symlinks maintained
HERE:=$(shell pwd -L)

# take over the gcc version we use
BLD_CC=gcc


##
## Control if PATH and LD_LIBRARY_PATH|DYLD_LIBRARY_PATH values are displayed.
##

ifeq "$(ENABLE_MAKE_WARNING)" "true"
$(warning PATH=$(PATH))
$(warning BLD_LD_LIBRARY_PATH=$(BLD_LD_LIBRARY_PATH))
endif

# disable our gcc wrapper
export NO_M64=1

# 32-bit/64-bit compiler/linker flag settings
rhel6_x86_64_BLD_CFLAGS=-m64 -gdwarf-2 -gstrict-dwarf
rhel7_x86_64_BLD_CFLAGS=-m64
rhel8_x86_64_BLD_CFLAGS=-m64
BLD_CFLAGS=$($(BLD_ARCH)_BLD_CFLAGS)

BLD_LDFLAGS=$($(BLD_ARCH)_BLD_LDFLAGS)

ifeq "$(BLD_ARCH)" ""
$(error Unable to determine value for BLD_ARCH!  You may set this on the command line.)
endif

# Functions for use in this and including makefiles

# function: check_pipe_for_errors
# purpose: detect cases where a member of a pipe sequence fails; make normally only checks the last command in the pipe
ifeq "$(origin check_pipe_for_errors)" "undefined"
check_pipe_for_errors=; if [ x`echo $${PIPESTATUS[*]} | sed -e s,0,,g | sed -e s,\ ,,g` != x ]; then echo "`date` -- ERROR: failure detected in piped operation"; exit 1; fi
endif
